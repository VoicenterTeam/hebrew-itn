/**
 * Hebrew Number Patterns
 *
 * This module provides pattern matching for Hebrew number expressions
 *
 * @module numberPatterns
 */

// Basic number mappings (1-10)
const DIGIT_PATTERNS = {
  // Masculine form
  אחד: '1',
  שניים: '2',
  שנים: '2',
  שלושה: '3',
  ארבעה: '4',
  חמישה: '5',
  שישה: '6',
  שבעה: '7',
  שמונה: '8',
  תשעה: '9',
  עשרה: '10',

  // Feminine form
  אחת: '1',
  שתיים: '2',
  שתים: '2',
  שלוש: '3',
  ארבע: '4',
  חמש: '5',
  שש: '6',
  שבע: '7',
  שמונה: '8',
  תשע: '9',
  עשר: '10',

  // Construct state (סמיכות)
  שני: '2',
  שתי: '2',
  שלושת: '3',
  ארבעת: '4',
  חמשת: '5',
  ששת: '6',
  שבעת: '7',
  שמונת: '8',
  תשעת: '9',
  עשרת: '10',
};

// Teen numbers (11-19)
const TEEN_PATTERNS = {
  'אחד עשר': '11',
  'שנים עשר': '12',
  'שלושה עשר': '13',
  'ארבעה עשר': '14',
  'חמישה עשר': '15',
  'שישה עשר': '16',
  'שבעה עשר': '17',
  'שמונה עשר': '18',
  'תשעה עשר': '19',

  'אחת עשרה': '11',
  'שתים עשרה': '12',
  'שלוש עשרה': '13',
  'ארבע עשרה': '14',
  'חמש עשרה': '15',
  'שש עשרה': '16',
  'שבע עשרה': '17',
  'שמונה עשרה': '18',
  'תשע עשרה': '19',
};

// Tens numbers (20-90)
const TENS_PATTERNS = {
  עשרים: '20',
  שלושים: '30',
  ארבעים: '40',
  חמישים: '50',
  שישים: '60',
  שבעים: '70',
  שמונים: '80',
  תשעים: '90',
};

// Hundreds numbers (100-900)
const HUNDREDS_PATTERNS = {
  מאה: '100',
  מאתיים: '200',
  'שלוש מאות': '300',
  'ארבע מאות': '400',
  'חמש מאות': '500',
  'שש מאות': '600',
  'שבע מאות': '700',
  'שמונה מאות': '800',
  'תשע מאות': '900',
};

// Thousands numbers
const THOUSANDS_PATTERNS = {
  אלף: '1,000',
  אלפיים: '2,000',
  'שלושת אלפים': '3,000',
  'ארבעת אלפים': '4,000',
  'חמשת אלפים': '5,000',
  'ששת אלפים': '6,000',
  'שבעת אלפים': '7,000',
  'שמונת אלפים': '8,000',
  'תשעת אלפים': '9,000',

  // Alternative forms
  אלפים: '1,000',
  'שלושה אלפים': '3,000',
  'ארבעה אלפים': '4,000',
  'חמישה אלפים': '5,000',
  'שישה אלפים': '6,000',
  'שבעה אלפים': '7,000',
  'שמונה אלפים': '8,000',
  'תשעה אלפים': '9,000',
};

// Millions numbers
const MILLIONS_PATTERNS = {
  מיליון: '1,000,000',
  'שני מיליון': '2,000,000',
  'שלושה מיליון': '3,000,000',
  'ארבעה מיליון': '4,000,000',
  'חמישה מיליון': '5,000,000',
  'שישה מיליון': '6,000,000',
  'שבעה מיליון': '7,000,000',
  'שמונה מיליון': '8,000,000',
  'תשעה מיליון': '9,000,000',
};

// Common compound number expressions
const COMPOUND_PATTERNS = {
  // Tens + units
  'עשרים ואחד': '21',
  'עשרים ושניים': '22',
  'עשרים ושלושה': '23',
  'עשרים וארבעה': '24',
  'עשרים וחמישה': '25',
  'עשרים ושישה': '26',
  'עשרים ושבעה': '27',
  'עשרים ושמונה': '28',
  'עשרים ותשעה': '29',

  'שלושים ואחד': '31',
  'שלושים ושניים': '32',
  'שלושים ושלושה': '33',
  'שלושים וארבעה': '34',
  'שלושים וחמישה': '35',
  'שלושים ושישה': '36',
  'שלושים ושבעה': '37',
  'שלושים ושמונה': '38',
  'שלושים ותשעה': '39',

  'ארבעים ואחד': '41',
  'ארבעים ושניים': '42',
  'ארבעים ושלושה': '43',
  'ארבעים וארבעה': '44',
  'ארבעים וחמישה': '45',
  'ארבעים ושישה': '46',
  'ארבעים ושבעה': '47',
  'ארבעים ושמונה': '48',
  'ארבעים ותשעה': '49',

  'חמישים ואחד': '51',
  'חמישים ושניים': '52',
  'חמישים ושלושה': '53',
  'חמישים וארבעה': '54',
  'חמישים וחמישה': '55',
  'חמישים ושישה': '56',
  'חמישים ושבעה': '57',
  'חמישים ושמונה': '58',
  'חמישים ותשעה': '59',

  'שישים ואחד': '61',
  'שישים ושניים': '62',
  'שישים ושלושה': '63',
  'שישים וארבעה': '64',
  'שישים וחמישה': '65',
  'שישים ושישה': '66',
  'שישים ושבעה': '67',
  'שישים ושמונה': '68',
  'שישים ותשעה': '69',

  'שבעים ואחד': '71',
  'שבעים ושניים': '72',
  'שבעים ושלושה': '73',
  'שבעים וארבעה': '74',
  'שבעים וחמישה': '75',
  'שבעים ושישה': '76',
  'שבעים ושבעה': '77',
  'שבעים ושמונה': '78',
  'שבעים ותשעה': '79',

  'שמונים ואחד': '81',
  'שמונים ושניים': '82',
  'שמונים ושלושה': '83',
  'שמונים וארבעה': '84',
  'שמונים וחמישה': '85',
  'שמונים ושישה': '86',
  'שמונים ושבעה': '87',
  'שמונים ושמונה': '88',
  'שמונים ותשעה': '89',

  'תשעים ואחד': '91',
  'תשעים ושניים': '92',
  'תשעים ושלושה': '93',
  'תשעים וארבעה': '94',
  'תשעים וחמישה': '95',
  'תשעים ושישה': '96',
  'תשעים ושבעה': '97',
  'תשעים ושמונה': '98',
  'תשעים ותשעה': '99',

  // Common hundreds + tens
  'מאה ועשרים': '120',
  'מאה ושלושים': '130',
  'מאה וארבעים': '140',
  'מאה וחמישים': '150',
  'מאתיים ועשרים': '220',
  'מאתיים ושלושים': '230',
  'מאתיים וארבעים': '240',
  'מאתיים וחמישים': '250',
  'מאתיים ושבעים': '270',

  // Common hundreds + units
  'מאה ואחד': '101',
  'מאה ושניים': '102',
  'מאה ושלושה': '103',
  'מאה וחמישה': '105',
  'מאתיים ואחד': '201',
  'מאתיים ושניים': '202',
  'מאתיים ושלושה': '203',
  'מאתיים וחמישה': '205',

  // Common thousands
  'אלף ומאתיים': '1,200',
  'אלף ושלוש מאות': '1,300',
  'אלף וחמש מאות': '1,500',
  'אלף ותשע מאות': '1,900',
  'אלפיים וחמש מאות': '2,500',

  // Years expressions
  'אלף תשע מאות ארבעים וחמש': '1945',
  'אלף תשע מאות ארבעים ושמונה': '1948',
  'אלף תשע מאות תשעים ותשע': '1999',
  'אלפיים ושמונה עשרה': '2018',

  // Common combined numbers
  'אלף שלוש מאות ארבעים וחמישה': '1,345',
  'שלושת אלפים מאתיים חמישים ושבעה': '3,257',
  'שלושת אלפים ארבע מאות וחמישים': '3,450',
  'שמונה מאות אלף': '800,000',
  'מיליון וחמש מאות אלף': '1,500,000',
  'שני מיליון שלוש מאות אלף': '2,300,000',
  'אחד עשר אלף ומאתיים': '11,200',
};

// Combine all patterns into a single map
const ALL_PATTERNS = {
  ...DIGIT_PATTERNS,
  ...TEEN_PATTERNS,
  ...TENS_PATTERNS,
  ...HUNDREDS_PATTERNS,
  ...THOUSANDS_PATTERNS,
  ...MILLIONS_PATTERNS,
  ...COMPOUND_PATTERNS,
};

/**
 * Gets the digit representation for a Hebrew number expression
 *
 * @param {string} hebrewNumber - The Hebrew number expression
 * @returns {string|null} The digit representation or null if not found
 */
function getDigitForHebrewNumber(hebrewNumber) {
  return ALL_PATTERNS[hebrewNumber] || null;
}

/**
 * Checks if a string is a Hebrew number expression
 *
 * @param {string} text - The text to check
 * @returns {boolean} True if the text is a Hebrew number expression
 */
function isHebrewNumber(text) {
  return !!ALL_PATTERNS[text];
}

/**
 * Gets all Hebrew number patterns
 *
 * @returns {Object} Object with all Hebrew number patterns
 */
function getAllPatterns() {
  return ALL_PATTERNS;
}

module.exports = {
  getDigitForHebrewNumber,
  isHebrewNumber,
  getAllPatterns,
  DIGIT_PATTERNS,
  TEEN_PATTERNS,
  TENS_PATTERNS,
  HUNDREDS_PATTERNS,
  THOUSANDS_PATTERNS,
  MILLIONS_PATTERNS,
  COMPOUND_PATTERNS,
};
